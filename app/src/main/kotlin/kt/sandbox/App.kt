/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package kt.sandbox

import com.couchbase.client.kotlin.Cluster
import com.couchbase.client.kotlin.RequestOptions
import kotlinx.coroutines.DEBUG_PROPERTY_NAME
import kotlinx.coroutines.DEBUG_PROPERTY_VALUE_ON
import kotlinx.coroutines.runBlocking
import java.nio.charset.StandardCharsets.UTF_8
import java.time.Duration

internal class App {
    val greeting: String
        get() {
            return "Hello World!"
        }
}


public fun main() {
    System.setProperty(DEBUG_PROPERTY_NAME, DEBUG_PROPERTY_VALUE_ON)
    foo()
}

internal fun foo() = runBlocking {
    val cluster = Cluster.connect("localhost", "Administrator", "password")
        .waitUntilReady(Duration.ofSeconds(10))

    println("cluster ready!")
    // cluster.query("SELECT * from default")

    //   val cluster = Cluster.connect("localhost", "Administrator", "password")
//    println(
//        collection.get(
//            "foo", GetOptions(
//                timeout = null
//            )
//        ).content.toString(UTF_8)
//    )
    val collection = cluster.bucket("default")
        .waitUntilReady(Duration.ofSeconds(10), setOf()).also { println("bucket ready!") }
        .defaultCollection()


    // delay(1000)

    println(collection)

    println("loading foo 3 times")
    collection.get("foo")
    collection.get("foo")
    collection.get("foo")
    println("done loading foo 3 times")

    println(
        collection.get("foo", options = RequestOptions(timeout = Duration.ofMillis(1)))
            .content.toString(UTF_8)
    )

//
//    collection.get("foo") { timeout = Duration.ofMillis(0) }
//
//    println(
//        collection.get("foo").content.toString(UTF_8)
//    )

}

